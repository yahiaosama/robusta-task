import unittest
from matrix_cipher import MatrixCipher
from unknowntype_error import UnknownTypeError

class TestShiftCipher(unittest.TestCase):
    def setUp(self):
        self.matrix_cipher = MatrixCipher("Hello World")

    def test_constructor(self):
        with self.assertRaises(UnknownTypeError):
            MatrixCipher(given_string=(3))
        with self.assertRaises(UnknownTypeError):
            MatrixCipher(matrix_to_decrypt=[[1,2,3]])

    def test_encrypt(self):
        self.assertEqual(self.matrix_cipher.encrypt(), [[5.0, 6.0, 3.0, 11.0, 11.0, 6.0, 8.0, 9.0, 15.0, 1.0, 8.0, 8.0, 13.0, 14.0, 12.0, 17.0], [11.0, 22.0, 18.0, 25.0, 14.0, 23.0, 12.0, 17.0, 22.0, 11.0, 19.0, 15.0, 21.0, 29.0, 18.0, 22.0], [12.0, 19.0, 13.0, 25.0, 16.0, 22.0, 16.0, 19.0, 24.0, 9.0, 21.0, 18.0, 24.0, 26.0, 22.0, 31.0], [12.0, 19.0, 13.0, 25.0, 16.0, 22.0, 16.0, 19.0, 24.0, 9.0, 21.0, 18.0, 24.0, 26.0, 22.0, 31.0], [15.0, 24.0, 20.0, 35.0, 25.0, 29.0, 24.0, 19.0, 35.0, 20.0, 25.0, 24.0, 31.0, 36.0, 27.0, 38.0], [1.0, 7.0, 3.0, 6.0, 0.0, 9.0, 3.0, 5.0, 3.0, 6.0, 4.0, 4.0, 2.0, 5.0, 3.0, 5.0], [14.0, 23.0, 16.0, 24.0, 29.0, 20.0, 17.0, 16.0, 27.0, 18.0, 21.0, 26.0, 25.0, 32.0, 18.0, 30.0], [15.0, 24.0, 20.0, 35.0, 25.0, 29.0, 24.0, 19.0, 35.0, 20.0, 25.0, 24.0, 31.0, 36.0, 27.0, 38.0], [9.0, 19.0, 5.0, 16.0, 21.0, 15.0, 12.0, 16.0, 20.0, 19.0, 16.0, 24.0, 16.0, 21.0, 12.0, 26.0], [12.0, 19.0, 13.0, 25.0, 16.0, 22.0, 16.0, 19.0, 24.0, 9.0, 21.0, 18.0, 24.0, 26.0, 22.0, 31.0], [11.0, 17.0, 11.0, 19.0, 11.0, 16.0, 9.0, 17.0, 18.0, 8.0, 19.0, 15.0, 19.0, 20.0, 16.0, 22.0]])
        self.matrix_cipher.given_string = "KOKO"
        self.assertEqual(self.matrix_cipher.encrypt(), [[8.0, 11.0, 10.0, 21.0, 20.0, 13.0, 16.0, 9.0, 26.0, 12.0, 12.0, 14.0, 20.0, 24.0, 17.0, 24.0], [14.0, 17.0, 17.0, 29.0, 25.0, 20.0, 21.0, 14.0, 32.0, 14.0, 21.0, 20.0, 29.0, 31.0, 24.0, 33.0], [8.0, 11.0, 10.0, 21.0, 20.0, 13.0, 16.0, 9.0, 26.0, 12.0, 12.0, 14.0, 20.0, 24.0, 17.0, 24.0], [14.0, 17.0, 17.0, 29.0, 25.0, 20.0, 21.0, 14.0, 32.0, 14.0, 21.0, 20.0, 29.0, 31.0, 24.0, 33.0]])

    def test_decrypt(self):
        self.matrix_cipher.matrix_to_decrypt = [[5.0, 6.0, 3.0, 11.0, 11.0, 6.0, 8.0, 9.0, 15.0, 1.0, 8.0, 8.0, 13.0, 14.0, 12.0, 17.0], [11.0, 22.0, 18.0, 25.0, 14.0, 23.0, 12.0, 17.0, 22.0, 11.0, 19.0, 15.0, 21.0, 29.0, 18.0, 22.0], [12.0, 19.0, 13.0, 25.0, 16.0, 22.0, 16.0, 19.0, 24.0, 9.0, 21.0, 18.0, 24.0, 26.0, 22.0, 31.0], [12.0, 19.0, 13.0, 25.0, 16.0, 22.0, 16.0, 19.0, 24.0, 9.0, 21.0, 18.0, 24.0, 26.0, 22.0, 31.0], [15.0, 24.0, 20.0, 35.0, 25.0, 29.0, 24.0, 19.0, 35.0, 20.0, 25.0, 24.0, 31.0, 36.0, 27.0, 38.0], [1.0, 7.0, 3.0, 6.0, 0.0, 9.0, 3.0, 5.0, 3.0, 6.0, 4.0, 4.0, 2.0, 5.0, 3.0, 5.0], [14.0, 23.0, 16.0, 24.0, 29.0, 20.0, 17.0, 16.0, 27.0, 18.0, 21.0, 26.0, 25.0, 32.0, 18.0, 30.0], [15.0, 24.0, 20.0, 35.0, 25.0, 29.0, 24.0, 19.0, 35.0, 20.0, 25.0, 24.0, 31.0, 36.0, 27.0, 38.0], [9.0, 19.0, 5.0, 16.0, 21.0, 15.0, 12.0, 16.0, 20.0, 19.0, 16.0, 24.0, 16.0, 21.0, 12.0, 26.0], [12.0, 19.0, 13.0, 25.0, 16.0, 22.0, 16.0, 19.0, 24.0, 9.0, 21.0, 18.0, 24.0, 26.0, 22.0, 31.0], [11.0, 17.0, 11.0, 19.0, 11.0, 16.0, 9.0, 17.0, 18.0, 8.0, 19.0, 15.0, 19.0, 20.0, 16.0, 22.0]]
        self.assertEqual(self.matrix_cipher.decrypt(), "Hello World")
        self.matrix_cipher.matrix_to_decrypt = [[8.0, 11.0, 10.0, 21.0, 20.0, 13.0, 16.0, 9.0, 26.0, 12.0, 12.0, 14.0, 20.0, 24.0, 17.0, 24.0], [14.0, 17.0, 17.0, 29.0, 25.0, 20.0, 21.0, 14.0, 32.0, 14.0, 21.0, 20.0, 29.0, 31.0, 24.0, 33.0], [8.0, 11.0, 10.0, 21.0, 20.0, 13.0, 16.0, 9.0, 26.0, 12.0, 12.0, 14.0, 20.0, 24.0, 17.0, 24.0], [14.0, 17.0, 17.0, 29.0, 25.0, 20.0, 21.0, 14.0, 32.0, 14.0, 21.0, 20.0, 29.0, 31.0, 24.0, 33.0]]
        self.assertEqual(self.matrix_cipher.decrypt(), "KOKO")

if __name__ == '__main__':
    unittest.main()
